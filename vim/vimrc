" Plugins {{{
call plug#begin('~/.vim/plugged')
Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'vimwiki/vimwiki'
Plug 'mechatroner/rainbow_csv'
Plug 'dense-analysis/ale'
Plug 'wincent/command-t', {
			\ 'do': 'cd ruby/command-t/ext/command-t && ruby extconf.rb && make'
			\ }
Plug 'junegunn/goyo.vim'
Plug 'arcticicestudio/nord-vim'
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'justinmk/vim-sneak'
Plug 'camspiers/lens.vim'
Plug 'jlanzarotta/bufexplorer'
call plug#end()
if has("autocmd")
  filetype plugin indent on
endif

" Configure vim-sneak
map f <Plug>Sneak_s
map F <Plug>Sneak_S

" Configure nerdtree
nmap <C-n> :NERDTreeToggle<CR>

 " }}}

" Basics {{{
set encoding=utf-8 " Encoding
set number " Display line numbers
set relativenumber " Enable relative line numbers
set splitbelow splitright " Sensible splitting behavior
set nocompatible
set nomodeline
set cursorline
set clipboard+=unnamedplus " Yank and Paste directly to and from clipboard
" Enable file autocompletion and fuzzy find
set wildmode=longest,list,full
set wildmenu
set path+=**
" Change leader key
let mapleader = ','
" Set the time the leader key is active (in ms)
set timeoutlen=2000
" Show tabs
set listchars=tab:>-
" Leave insert mode
inoremap jk <ESC>
 " }}}

" Syntax highlighting {{{
let g:solarized_termcolors=256 " If using solarized color scheme
let g:gruvbox_contrast_dark="soft" " If using gruvbox color scheme
let g:gruvbox_contrast_light="hard"
if has("syntax")
  syntax on
  colorscheme nord
endif
" }}}

" Statusline {{{
set laststatus=2
set statusline=
"set statusline+=%7*\[%n]                                  "buffernr
set statusline+=%1*\ %<%F\                                "Filename
set statusline+=%2*\ %y\                                  "FileType
set statusline+=%3*\ %{''.(&fenc!=''?&fenc:&enc).''}      "Encoding
set statusline+=%3*\ %{(&bomb?\",BOM\":\"\")}\            "Encoding2
set statusline+=%4*\ %{&ff}\                              "FileFormat (dos/unix..)
set statusline+=%5*\ %{&spelllang}\                       "Spellanguage
set statusline+=%8*\ %=\ %l:%v\                           "Rownr:Colnr
set statusline+=%0*\ \ %m%r%w\ %P\ \                      "Modified? Readonly? Top/bot.
 " }}}

" Snippets {{{
" Python
nnoremap <Leader>pydef :-1read $HOME/.vim/snippets/python/skel_func.py<CR>wf(a
nnoremap <Leader>pyclass :-1read $HOME/.vim/snippets/python/skel_class.py<CR>wi 
" LaTeX
nnoremap <Leader>item :-1read $HOME/.vim/snippets/latex/skel_itemize.tex<CR>1j$i
nnoremap <Leader>enum :-1read $HOME/.vim/snippets/latex/skel_enumerate.tex<CR>1j$i
nnoremap <Leader>fig :-1read $HOME/.vim/snippets/latex/skel_figure.tex<CR>1j$i
nnoremap <Leader>outline :-1read $HOME/.vim/snippets/latex/skel_outline.tex<CR>1j$i
" Markdown
nnoremap <Leader>mdtab :-1read $HOME/.vim/snippets/markdown/skel_table.md<CR>2li
nnoremap <Leader>mdimg :-1read $HOME/.vim/snippets/markdown/skel_image.md<CR>f[a
nnoremap <Leader>mdlink :-1read $HOME/.vim/snippets/markdown/skel_link.md<CR>f[a
nnoremap <Leader>mdblock :-1read $HOME/.vim/snippets/markdown/skel_codeblock.md<CR>$i
nnoremap <Leader>mdmeta :-1read $HOME/.vim/snippets/markdown/skel_meta.md<CR>3j$"=strftime("%Y-%m-%d")<CR>Pgg01j$i
" }}}

" run programs silently {{{
command! -nargs=* RunSilent
	\ | execute ':silent !'.'<args>'
	\ | execute ':redraw!'
" }}}

" markdown preview with pandoc {{{
nmap <Leader>pc :RunSilent pandoc -f markdown -o /tmp/vim-pandoc-out.pdf % && pkill -1 mupdf<CR>
nmap <Leader>pp :RunSilent zathura /tmp/vim-pandoc-out.pdf &<CR>
 " }}}

" Search through vimwiki {{{
command! -nargs=1 Wikigrep vimgrep "<args>" $HOME/vimwiki/**/*.wiki
nnoremap <Leader>w :Wikigrep<space>
" }}}

" run make {{{
nmap <Leader>mk :RunSilent make<CR>
"}}}

" Normal, write and code modes {{{
command Normalmode set background=dark | colorscheme nord | Goyo! | set nolinebreak | set norelativenumber | set nospell | set cursorline
command Writemode set background=light | colorscheme solarized | set linebreak | set spell | set nocursorline | Goyo 80
command Codemode set background=dark | colorscheme obsidian | Goyo! | set nolinebreak | set nospell | set cursorline
nmap <Leader>nm :Normalmode<CR>
nmap <Leader>wm :Writemode<CR>
nmap <Leader>cm :Codemode<CR>
" }}}

" Insert current date {{{
nmap <Leader>d "=strftime("%Y-%m-%d")<CR>P
" }}}

" Commands {{{
" Requires ctags to be installed
command! MakeTags !ctags -R .
" }}}

" autocmds {{{
" reopening a file at same position
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
  autocmd BufRead,BufNewFile ~/.mutt/temp/mutt* :Goyo 80 | set linebreak | set spell
  " automatically deletes all trailing whitespace on save
  " autocmd BufWritePre * %s/\s\+$//e
endif

" Use specific colorscheme for buffer if b:colors_name is set
au BufEnter * if (exists("b:colors_name")) | let b:current_colors=colors_name
 \| execute "colorscheme " . b:colors_name | endif
au BufLeave * if (exists("b:current_colors")) | execute "colorscheme " . b:current_colors | endif
" }}}

" Open vimrc {{{
nnoremap <Leader>ev :vsp ~/.vimrc<CR>
nnoremap <Leader>sv :source ~/.vimrc <bar> :doautocmd BufRead<CR>
" }}}

" Disable arrow and page keys {{{
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>
noremap <Up> <Nop>
noremap <PageUp> <Nop>
noremap <PageDown> <Nop>
noremap! <Down> <Nop>
noremap! <Left> <Nop>
noremap! <Right> <Nop>
noremap! <Up> <Nop>
noremap! <PageUp> <Nop>
noremap! <PageDown> <Nop>
" }}}

" Folding {{{
set foldenable
set foldlevelstart=10
set foldnestmax=10
set foldmethod=syntax
nnoremap <space> za
" }}}
