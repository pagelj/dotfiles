set encoding=utf-8 " Encoding
set number " Display line numbers
set relativenumber " Display relative line numbers

" Enable syntax highlighting
if has("syntax")
  syntax on
  colorscheme true-monochrome
endif

" Enable plugins
if has("autocmd")
  filetype plugin indent on
endif

set nocompatible

" Enable autocompletion
set wildmode=longest,list,full
set wildmenu

" reopening a file at same position
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Change leader key
let mapleader = ','
" Set the time the leader key is active (in ms)
set timeoutlen=4000

" status line
set laststatus=2
set statusline=
set statusline+=%7*\[%n]                                  "buffernr
set statusline+=%1*\ %<./%t\                              "Filename
set statusline+=%2*\ %y\                                  "FileType
set statusline+=%3*\ %{''.(&fenc!=''?&fenc:&enc).''}      "Encoding
set statusline+=%3*\ %{(&bomb?\",BOM\":\"\")}\            "Encoding2
set statusline+=%4*\ %{&ff}\                              "FileFormat (dos/unix..) 
set statusline+=%5*\ %{&spelllang}\                       "Spellanguage
set statusline+=%8*\ %=\ %l:%v\                           "Rownr:Colnr
set statusline+=%0*\ \ %m%r%w\ %P\ \                      "Modified? Readonly? Top/bot.

" run programs silently
command! -nargs=* RunSilent
	\ | execute ':silent !'.'<args>'
	\ | execute ':redraw!'

" markdown preview with pandoc
autocmd BufEnter *.markdown,*.md,*.wiki :RunSilent pandoc -f markdown -o /tmp/vim-pandoc-out.pdf % && xdg-open /tmp/vim-pandoc-out.pdf &
autocmd BufWritePost *.markdown,*.md,*.wiki :RunSilent pandoc -f markdown -o /tmp/vim-pandoc-out.pdf % && pkill -1 mupdf

" vim-plug section
call plug#begin('~/.vim/plugged')
Plug 'vimwiki/vimwiki'
Plug 'chrisbra/csv.vim'
Plug 'w0rp/ale'
call plug#end()
