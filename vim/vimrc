set encoding=utf-8 " Encoding
set number " Display line numbers
set relativenumber " Display relative line numbers

" Enable syntax highlighting
let g:solarized_termcolors=256 " If using solarized color scheme
if has("syntax")
  syntax on
  colorscheme true-monochrome
endif

" Enable plugins
if has("autocmd")
  filetype plugin indent on
endif

set nocompatible
set nomodeline

" Enable autocompletion
set wildmode=longest,list,full
set wildmenu

" reopening a file at same position
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Change leader key
let mapleader = ','
" Set the time the leader key is active (in ms)
set timeoutlen=2000

" status line
set laststatus=2
set statusline=
"set statusline+=%7*\[%n]                                  "buffernr
set statusline+=%1*\ %<%t\                                "Filename
set statusline+=%2*\ %y\                                  "FileType
set statusline+=%3*\ %{''.(&fenc!=''?&fenc:&enc).''}      "Encoding
set statusline+=%3*\ %{(&bomb?\",BOM\":\"\")}\            "Encoding2
set statusline+=%4*\ %{&ff}\                              "FileFormat (dos/unix..) 
set statusline+=%5*\ %{&spelllang}\                       "Spellanguage
set statusline+=%8*\ %=\ %l:%v\                           "Rownr:Colnr
set statusline+=%0*\ \ %m%r%w\ %P\ \                      "Modified? Readonly? Top/bot.

" Show tabs
set listchars=tab:>-

" run programs silently
command! -nargs=* RunSilent
	\ | execute ':silent !'.'<args>'
	\ | execute ':redraw!'

" markdown preview with pandoc
nmap <Leader>pc :RunSilent pandoc -f markdown -o /tmp/vim-pandoc-out.pdf % && pkill -1 mupdf &<CR>
nmap <Leader>pp :RunSilent mupdf /tmp/vim-pandoc-out.pdf &<CR>

" Create commands for activating customized write and code modes
command Writemode colorscheme solarized | set background=light | set linebreak | Goyo 70
command Codemode colorscheme nord | set background=dark | set nolinebreak | set nospell | Goyo!
nmap <Leader>wm :Writemode<CR>
nmap <Leader>cm :Codemode<CR>

" Macro for inserting current date
nmap <Leader>d "=strftime("%Y-%m-%d")<CR>P

" vim-plug section
call plug#begin('~/.vim/plugged')
Plug 'vimwiki/vimwiki'
Plug 'chrisbra/csv.vim'
Plug 'w0rp/ale'
Plug 'wincent/command-t'
Plug 'junegunn/goyo.vim'
Plug 'arcticicestudio/nord-vim'
call plug#end()
