#################
### Functions ###
#################

# Source functions
if [ -f ~/.zsh_functions ]; then
  source ~/.zsh_functions
fi

########################
#### Autocomplete ######
########################

# Perform some sanity checks on completion option
autoload -Uz compinit
compinit

bindkey '^i' expand-or-complete-prefix # Complete inside of string
zstyle ':completion:*' completer _complete _match _approximate # Enable fuzzy matching
zstyle ':completion:*:match:*' original only
zstyle -e ':completion:*:approximate:*' max-errors 'reply=( $(( ($#PREFIX+$#SUFFIX)/3 )) numeric )' # Tolerance of approximate increases by amount of characters typed so far
zstyle ':completion:*:(rm|kill|diff):*' ignore-line yes # Avoid getting the same file offered again with certain programs
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*:descriptions' format "- %d -"
zstyle ':completion:*:corrections' format "- %d - (errors %e})"
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:manuals' separate-sections true
zstyle ':completion:*:manuals.(^1*)' insert-sections true
zstyle ':completion:*' menu select
zstyle ':completion:*' verbose yes
zstyle ':completion:*' rehash true
# Speed up completion by setting cache
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Get completion for hostname if in ~/.ssh/config
_hosts() { compadd $(getent hosts | tr -s ' ' '\t' | cut -f2) }

#######################
### Options ###########
#######################

setopt CORRECT # Make suggestions for correcting spelling mistakes
setopt EXTENDED_GLOB # Inlude ~ in globbing
setopt CASE_GLOB # Case sensitive globbing
setopt GLOB_COMPLETE # Use pattern matching for wildcards and ~
setopt NUMERIC_GLOB_SORT # Sort numerically if numbers are present in globbing
setopt RC_EXPAND_PARAM # Expand globbing arrays to full names
setopt NO_BEEP # Disable system beeps
setopt MARK_DIRS # Always append trailing / to dirs
setopt APPEND_HISTORY # Append to history file instead of overwriting
setopt HIST_IGNORE_ALL_DUPS # Ignore all history dups
setopt AUTO_CD # No need to type 'cd' if standard input is a valid path
setopt PROMPT_SUBST # Enable command substitution in prompt

##########################
######## Basics ##########
##########################

# Set history options
HISTFILE=~/.zhistory
HISTSIZE=10000
SAVEHIST=10000

# Source aliases
if [ -f ~/.zsh_aliases ]; then
    source ~/.zsh_aliases
fi

# Use fish-like history substring search
if [ -f /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh ]; then
    source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
    # bind UP and DOWN arrow keys to history substring search
    zmodload zsh/terminfo
    bindkey "$terminfo[kcuu1]" history-substring-search-up
    bindkey "$terminfo[kcud1]" history-substring-search-down
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
fi
# Use fish-like autosuggestion
if [ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
	source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
	ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
	ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=2'
fi
# Use fish-like syntax highlighting
#if [ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
#	source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#fi
# fzf file history
if [ -f /usr/share/fzf/key-bindings.zsh ]; then
	source /usr/share/fzf/key-bindings.zsh
fi

######################
####### Prompt #######
######################

# set left prompt
PROMPT='%(!.#.$>) %E'

######
# This whole git prompt stuff was taken from Manjaro's zsh setup, slightly modified
######

# Modify the colors and symbols in these variables as desired.
GIT_PROMPT_SYMBOL=""                                            # clean repo
GIT_PROMPT_PREFIX="["
GIT_PROMPT_SUFFIX="]"
GIT_PROMPT_AHEAD="ANUM"                                         # A"NUM" - ahead by "NUM" commits
GIT_PROMPT_BEHIND="BNUM"                                        # B"NUM" - behind by "NUM" commits
GIT_PROMPT_MERGING="!"                                          # merge conflict
GIT_PROMPT_UNTRACKED="++"                                       # untracked files
GIT_PROMPT_MODIFIED="+"                                         # tracked files modified
GIT_PROMPT_STAGED="->"                                          # staged changes present = ready for "git push"

# Right prompt with exit status of previous command if not successful
# Also show background process, git information and current dir
RPROMPT='$(bg_process) $(git_prompt_string) %(?..[%?]) [%1~/]'

#################
##### Misc ######
#################

# TMUX
if [[ -z "$TMUX" ]] && [[ -n "$DISPLAY" ]]; then # Test if tmux is running
    ID="$( tmux ls | grep -vm1 attached | cut -d: -f1 )" # get the id of a deattached session
    if [[ -z "$ID" ]]; then # if not available create a new one
        tmux new-session
    else
        tmux attach-session -t "$ID" # if available attach to it
    fi
fi
if [ -n "$TMUX" ]; then # If tmux is running
    # create a global per-pane variable that holds the pane's PWD
    export PS1=$PS1'$( [ -n $TMUX ] && tmux setenv -g TMUX_PWD_$(tmux display -p "#D" | tr -d %) $PWD)'
fi

# Color man pages
export LESS_TERMCAP_mb=$'\E[01;32m'
export LESS_TERMCAP_md=$'\E[01;32m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;47;34m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;36m'
export LESS=-r

# Load DIRCOLORS
test -r "~/.dir_colors" && eval $(dircolors ~/.dir_colors)

# Add support for GnuPG
export GPG_TTY=$(tty)

# Disable graphical interface for SSH password
unset SSH_ASKPASS

# Customize tty
if [ "$TERM" = "linux" ]; then
	printf '\033]P03b4252'; # black
	printf '\033]P1bf616a'; # red
	printf '\033]P2a3be8c'; # green
	printf '\033]P3ebcb8b'; # yellow
	printf '\033]P481a1c1'; # blue
	printf '\033]P5b48ead'; # magenta
	printf '\033]P688c0d0'; # cyan
	printf '\033]P7e5e9f0'; # white
	printf '\033]P84c566a'; # bright black
	printf '\033]P9bf616a'; # bright red
	printf '\033]PAa3be8c'; # bright green
	printf '\033]PBebcb8b'; # bright yellow
	printf '\033]PC81a1c1'; # bright blue
	printf '\033]PDb48ead'; # bright magenta
	printf '\033]PE8fbcbb'; # bright cyan
	printf '\003]PFeceff4'; # bright white
	clear;
	if [ -f "/usr/share/kbd/consolefonts/ter-v24n.psf.gz" ]; then
		setfont ter-v24n
	fi
fi

# added by travis gem
[ -f /home/janis/.travis/travis.sh ] && source /home/janis/.travis/travis.sh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/janis/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/janis/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/janis/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/janis/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Start X in tty2
if [[ "$(tty)" = "/dev/tty2" ]]; then
	pgrep dwm || startx
fi
